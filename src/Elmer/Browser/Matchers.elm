module Elmer.Browser.Matchers exposing
  ( expectTitle
  )

{-| Make expectations about the Document generated by a view function

# Document Matchers
@docs expectTitle

-}

import Expect
import Elmer exposing (Matcher)
import Elmer.TestState as TestState
import Elmer.Context as Context exposing (Context, View(..))
import Elmer.Errors as Errors
import Elmer.Printer exposing (..)


{-| Expect that a document has some title.
-}
expectTitle : String -> Matcher (Elmer.TestState model msg)
expectTitle expectedTitle =
  TestState.mapToExpectation <|
    \context ->
      case Context.model context of
        Just model ->
          case renderTitle model context of
            Just actualTitle ->
              if expectedTitle == actualTitle then
                Expect.pass
              else
                Expect.fail <| Errors.wrongTitle expectedTitle actualTitle
            Nothing ->
              Expect.fail <| Errors.noTitle expectedTitle
        Nothing ->
          Expect.fail Errors.noModel
      

renderTitle : model -> Context model msg -> Maybe String
renderTitle model context =
  case Context.view context of
    DocumentView view ->
      view model
        |> .title
        |> Just
    HtmlView _ ->
      Nothing